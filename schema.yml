openapi: 3.0.3
info:
  title: Shop Service API
  version: 1.0.0
  description: 'A service to make the communication between sellers and buyers easier.
    For more information, visit https://github.com/alina-vorontsova/python-final-diplom/blob/master/README.md '
paths:
  /basket/:
    patch:
      operationId: basket_partial_update
      description: Заполнить адрес при оформлении заказа на стадии 'в корзине'.
      tags:
      - basket
      security:
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /categories/:
    get:
      operationId: categories_list
      description: Просмотр всех категорий товаров и сортировка по параметру 'магазины'.
      parameters:
      - in: query
        name: shops
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      tags:
      - categories
      security:
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
  /categories/{id}/:
    get:
      operationId: categories_retrieve
      description: Просмотр всех категорий товаров и сортировка по параметру 'магазины'.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
          maximum: 2147483647
          minimum: 0
        description: A unique value identifying this Категория.
        required: true
      tags:
      - categories
      security:
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /get_contact/:
    post:
      operationId: get_contact_create
      description: Внести в базу данных контактную информацию определённого пользователя.
      tags:
      - get_contact
      security:
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /login/:
    post:
      operationId: login_create
      description: Войти в систему от лица определённого пользователя.
      tags:
      - login
      security:
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /order_confirmation/:
    post:
      operationId: order_confirmation_create
      description: Получить потверждение заказа от пользователя и отправить эл. письмо
        с подтверждением заказа.
      tags:
      - order_confirmation
      security:
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /orders/:
    get:
      operationId: orders_retrieve
      description: Просмотреть все заказы, созданные пользователем.
      tags:
      - orders
      security:
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: orders_create
      description: Создать новый заказ.
      tags:
      - orders
      security:
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /orders/{order_id}/:
    get:
      operationId: orders_retrieve_2
      description: |-
        Просмотреть подробную информацию о заказе.

        Ключевые аргументы:
        order_id -- ID заказа в базе данных.
      parameters:
      - in: path
        name: order_id
        schema:
          type: integer
        required: true
      tags:
      - orders
      security:
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /products/:
    get:
      operationId: products_list
      description: Просмотр всех товаров и сортировка по параметру 'категория'.
      parameters:
      - in: query
        name: category
        schema:
          type: integer
          maximum: 2147483647
          minimum: 0
      tags:
      - products
      security:
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
  /products/{id}/:
    get:
      operationId: products_retrieve
      description: Просмотр всех товаров и сортировка по параметру 'категория'.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Товар.
        required: true
      tags:
      - products
      security:
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /register/:
    post:
      operationId: register_create
      description: |-
        Создать в базе данных запись с информацией о новом пользователе.
        Отправить сообщение с подтверждением о регистрации.
      tags:
      - register
      security:
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /shops/:
    get:
      operationId: shops_list
      description: Просмотр всех магазинов и сортировка по параметру 'статус'.
      parameters:
      - in: query
        name: state
        schema:
          type: boolean
      tags:
      - shops
      security:
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shop'
          description: ''
  /shops/{id}/:
    get:
      operationId: shops_retrieve
      description: Просмотр всех магазинов и сортировка по параметру 'статус'.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Магазин.
        required: true
      tags:
      - shops
      security:
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: ''
  /update/{file_name}/:
    post:
      operationId: update_create
      description: |-
        Загрузить в базу данных информацию о магазине, категориях товаров, товарах, характеристиках.

        Ключевые аргументы:
        file_name -- название файла относительно файла manage.py, формат .yaml.
      parameters:
      - in: path
        name: file_name
        schema:
          type: string
        required: true
      tags:
      - update
      security:
      - basicAuth: []
      responses:
        '200':
          description: No response body
components:
  schemas:
    Category:
      type: object
      description: Работа с категориями товаров.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название
          maxLength: 40
        shops:
          type: array
          items:
            type: string
      required:
      - id
      - name
      - shops
    Product:
      type: object
      description: Работа с общей информацией о товарах.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название
          maxLength: 100
        category:
          type: string
          readOnly: true
      required:
      - category
      - id
      - name
    Shop:
      type: object
      description: Работа с магазинами.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название
          maxLength: 40
        state:
          type: boolean
          title: Статус
      required:
      - id
      - name
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
